<?PHP

const DB_PATH = WEB_ROOT."/db/wtw83.db";


// below is from folks at https://www.sqlitetutorial.net/sqlite-php/connect/


class Config {
    /**
     * path to the sqlite file
     */
    const PATH_TO_SQLITE_FILE = DB_PATH;

}

/**
 * SQLite connnection
 */
class SQLiteConnection {
    /**
     * PDO instance
     * @var type
     */
    private $pdo;

    /**
     * return in instance of the PDO object that connects to the SQLite database
     * @return \PDO
     */
    public function connect() {
        if ($this->pdo == null) {
            try {
                $this->pdo = new \PDO("sqlite:" . Config::PATH_TO_SQLITE_FILE);
                $this->pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
                $this->pdo->setAttribute(PDO::ATTR_DEFAULT_FETCH_MODE, PDO::FETCH_ASSOC);
                $this->pdo->setAttribute(PDO::ATTR_TIMEOUT, 1);
            } catch (\PDOException $e) {
                echo $e->getMessage()."<br>";
                $this->pdo = null;
            }
        }
        return $this->pdo;
    }

    public function generateTables() {
        $statements = [];

        $statements[] = <<<SQL
CREATE TABLE IF NOT EXISTS day_records (
    date      DATE    UNIQUE,
    exercised INT DEFAULT (0)
);
SQL;


        $statements[] = <<<SQL
CREATE TABLE IF NOT EXISTS food_records (
    food   TEXT,
    points REAL,
    id     INTEGER PRIMARY KEY AUTOINCREMENT
);
SQL;

        $statements[] = <<<SQL
CREATE TABLE IF NOT EXISTS points_records (
    id                INTEGER          PRIMARY KEY AUTOINCREMENT,
    food              INTEGER          NOT NULL
                                       REFERENCES food_records (id),
    quantity          [DATA_TYPE REAL] DEFAULT 0.0,
    points            [DATA_TYPE REAL] DEFAULT 0.0,
    table_constraints,
    date,
    time
);
SQL;

        try {
            foreach ($statements as $statement) {
                $x = $this->pdo->exec($statement);
                print_r($x);
            }
        } catch (Exception $e) {
            print_r($e->getMessage());
        }


    }
}


$cnx = (new SQLiteConnection());

if (file_exists(DB_PATH)) {
    echo "DB already exists here: " . DB_PATH.". Skipping init<br>";
    $pdo = $cnx->connect();
} else {
    echo "Initializing ... ";
    $pdo = $cnx->connect();
    $cnx->generateTables();
    echo "done.";
}

if ($pdo != null) {
    echo 'Connected to the SQLite database successfully!<br>';
} else {
    echo 'Whoops, could not connect to the SQLite database!<br>';
    exit;
}


exit;


$stmt = $pdo->query("SELECT name
                                   FROM sqlite_master
                                   WHERE type = 'table'
                                   ORDER BY name");
$tables = [];
while ($row = $stmt->fetch(\PDO::FETCH_ASSOC)) {
    $tables[] = $row['name'];
}
dump($tables);
